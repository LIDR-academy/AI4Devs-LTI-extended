openapi: 3.0.0
info:
  title: AI4Devs Candidate API
  version: 1.0.0
  description: API for managing candidate data in the AI4Devs recruitment system.
paths:
  /candidates:
    get:
      summary: Get all candidates with pagination and filters
      description: Retrieves a paginated list of candidates with optional search and sorting capabilities.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of candidates per page
        - in: query
          name: search
          schema:
            type: string
          description: Search term to filter candidates by first name, last name, or email
        - in: query
          name: sort
          schema:
            type: string
            enum: [firstName, lastName, email]
            default: firstName
          description: Field to sort by
        - in: query
          name: order
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Sort order
      responses:
        '200':
          description: Candidates retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        address:
                          type: string
                        educations:
                          type: array
                          items:
                            type: object
                        workExperiences:
                          type: array
                          items:
                            type: object
                        resumes:
                          type: array
                          items:
                            type: object
                        applications:
                          type: array
                          items:
                            type: object
                  metadata:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: Total number of candidates
                      page:
                        type: integer
                        description: Current page number
                      limit:
                        type: integer
                        description: Number of candidates per page
                      totalPages:
                        type: integer
                        description: Total number of pages
        '400':
          description: Invalid pagination parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
    post:
      summary: Add a new candidate
      description: Adds a new candidate to the system and returns the created candidate data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: First name of the candidate
                  minLength: 2
                  maxLength: 50
                  pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+$'
                lastName:
                  type: string
                  description: Last name of the candidate
                  minLength: 2
                  maxLength: 50
                  pattern: '^[a-zA-ZñÑáéíóúÁÉÍÓÚ ]+$'
                email:
                  type: string
                  description: Email address of the candidate
                  pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
                phone:
                  type: string
                  description: Phone number of the candidate
                  pattern: '^\+?\d{1,3}?[- .]?\(?(?:\d{2,3})\)?[- .]?\d\d\d[- .]?\d\d\d\d$'
                address:
                  type: string
                  description: Address of the candidate
                  maxLength: 100
                educations:
                  type: array
                  description: Education history of the candidate
                  items:
                    type: object
                    properties:
                      institution:
                        type: string
                        description: Institution name
                        maxLength: 100
                      title:
                        type: string
                        description: Degree or title obtained
                        maxLength: 100
                      startDate:
                        type: string
                        description: Start date of the education
                        pattern: '^\d{4}-\d{2}-\d{2}$'
                      endDate:
                        type: string
                        description: End date of the education
                        pattern: '^\d{4}-\d{2}-\d{2}$'
                workExperiences:
                  type: array
                  description: Work experience of the candidate
                  items:
                    type: object
                    properties:
                      company:
                        type: string
                        description: Company name
                        maxLength: 100
                      position:
                        type: string
                        description: Position held
                        maxLength: 100
                      description:
                        type: string
                        description: Description of the job responsibilities
                        maxLength: 200
                      startDate:
                        type: string
                        description: Start date of the job
                        pattern: '^\d{4}-\d{2}-\d{2}$'
                      endDate:
                        type: string
                        description: End date of the job
                        pattern: '^\d{4}-\d{2}-\d{2}$'
                cv:
                  type: object
                  description: CV file information
                  properties:
                    filePath:
                      type: string
                      description: Path to the CV file
                    fileType:
                      type: string
                      description: Type of the CV file
      responses:
        '201':
          description: Candidate created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the candidate
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  address:
                    type: string
                  educations:
                    type: array
                    items:
                      type: object
                      properties:
                        institution:
                          type: string
                        title:
                          type: string
                        startDate:
                          type: string
                        endDate:
                          type: string
                  workExperiences:
                    type: array
                    items:
                      type: object
                      properties:
                        company:
                          type: string
                        position:
                          type: string
                        description:
                          type: string
                        startDate:
                          type: string
                        endDate:
                          type: string
                  cv:
                    type: object
        '400':
          description: Bad request (invalid input data)
        '500':
          description: Internal server error
  /candidates/{id}:
    put:
      summary: Update candidate stage
      description: Updates the interview stage of a specific candidate.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the candidate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationId:
                  type: integer
                  description: ID of the application
                currentInterviewStep:
                  type: integer
                  description: Current interview step
      responses:
        '200':
          description: Candidate stage updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      positionId:
                        type: integer
                      candidateId:
                        type: integer
                      applicationDate:
                        type: string
                        format: date-time
                      currentInterviewStep:
                        type: integer
                      notes:
                        type: string
                        nullable: true
                      interviews:
                        type: array
                        items:
                          type: object
                          properties:
                            interviewDate:
                              type: string
                              format: date-time
                            interviewStep:
                              type: string
                            score:
                              type: number
                              nullable: true
        '400':
          description: Invalid input data
        '404':
          description: Candidate or application not found
        '500':
          description: Internal server error
    get:
      summary: Get candidate by ID
      description: Retrieves detailed information about a specific candidate by their unique identifier.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Unique identifier of the candidate
      responses:
        '200':
          description: Candidate retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique identifier for the candidate
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  address:
                    type: string
                  educations:
                    type: array
                    items:
                      type: object
                      properties:
                        institution:
                          type: string
                        title:
                          type: string
                        startDate:
                          type: string
                        endDate:
                          type: string
                  workExperiences:
                    type: array
                    items:
                      type: object
                      properties:
                        company:
                          type: string
                        position:
                          type: string
                        description:
                          type: string
                        startDate:
                          type: string
                        endDate:
                          type: string
                  cv:
                    type: object
                    properties:
                      filePath:
                        type: string
                      fileType:
                        type: string
        '404':
          description: Candidate not found
        '500':
          description: Internal server error
  /upload:
    post:
      summary: Upload a file
      description: Uploads a file to the server. Only PDF and DOCX files are allowed.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to be uploaded
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  filePath:
                    type: string
                    description: Path where the file is stored
                  fileType:
                    type: string
                    description: MIME type of the uploaded file
        '400':
          description: Invalid file type, only PDF and DOCX are allowed
        '500':
          description: Error during the file upload process
  /positions/{id}/candidates:
    get:
      summary: Get candidates by position
      description: Retrieves all candidates for a specific position with their current interview step and scores.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the position
      responses:
        '200':
          description: List of candidates with their interview details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    fullName:
                      type: string
                      description: Full name of the candidate
                    currentInterviewStep:
                      type: string
                      description: Current interview step name
                    candidateId:
                      type: integer
                      description: ID of the candidate
                    applicationId:
                      type: integer
                      description: ID of the application
                    averageScore:
                      type: number
                      description: Average score from all interviews
        '500':
          description: Internal server error
  /positions/{id}/interviewflow:
    get:
      summary: Get interview flow by position ID
      description: Retrieves the interview flow associated with a specific position.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the position
      responses:
        '200':
          description: Interview flow retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  positionName:
                    type: string
                    description: Name of the position
                  interviewFlow:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Unique identifier for the interview flow
                      description:
                        type: string
                        description: Description of the interview flow
                      interviewSteps:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: Unique identifier for the interview step
                            interviewFlowId:
                              type: integer
                              description: Identifier of the interview flow this step belongs to
                            interviewTypeId:
                              type: integer
                              description: Identifier of the interview type
                            name:
                              type: string
                              description: Name of the interview step
                            orderIndex:
                              type: integer
                              description: Order index of the step in the flow
        '404':
          description: Position not found
        '500':
          description: Internal server error
  /positions:
    get:
      summary: Get all positions
      description: Retrieves all visible positions in the system.
      responses:
        '200':
          description: Positions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    companyId:
                      type: integer
                    interviewFlowId:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    status:
                      type: string
                    isVisible:
                      type: boolean
                    location:
                      type: string
                    jobDescription:
                      type: string
                    requirements:
                      type: string
                    responsibilities:
                      type: string
                    salaryMin:
                      type: number
                    salaryMax:
                      type: number
                    employmentType:
                      type: string
                    benefits:
                      type: string
                    companyDescription:
                      type: string
                    applicationDeadline:
                      type: string
                      format: date-time
                    contactInfo:
                      type: string
        '500':
          description: Internal server error
  /positions/{id}:
    put:
      summary: Update a position
      description: Updates an existing position with the provided data.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the position to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                companyId:
                  type: integer
                  description: Company ID
                interviewFlowId:
                  type: integer
                  description: Interview flow ID
                title:
                  type: string
                  description: Position title
                description:
                  type: string
                  description: Position description
                status:
                  type: string
                  description: Position status
                isVisible:
                  type: boolean
                  description: Whether the position is visible
                location:
                  type: string
                  description: Job location
                jobDescription:
                  type: string
                  description: Detailed job description
                requirements:
                  type: string
                  description: Job requirements
                responsibilities:
                  type: string
                  description: Job responsibilities
                salaryMin:
                  type: number
                  description: Minimum salary
                salaryMax:
                  type: number
                  description: Maximum salary
                employmentType:
                  type: string
                  description: Type of employment
                benefits:
                  type: string
                  description: Benefits offered
                companyDescription:
                  type: string
                  description: Company description
                applicationDeadline:
                  type: string
                  format: date-time
                  description: Application deadline
                contactInfo:
                  type: string
                  description: Contact information
      responses:
        '200':
          description: Position updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    description: Updated position data
        '400':
          description: Invalid input data or validation error
        '404':
          description: Position not found
        '500':
          description: Internal server error
  /positions/{id}/candidates/names:
    get:
      summary: Get candidate names by position
      description: Retrieves the names of all candidates who applied to a specific position.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the position
      responses:
        '200':
          description: Candidate names retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    candidateId:
                      type: integer
                      description: ID of the candidate
                    fullName:
                      type: string
                      description: Full name of the candidate
        '500':
          description: Internal server error
                            interviewTypeId:
                              type: integer
                              description: Type of interview
                            name:
                              type: string
                              description: Name of the interview step
                            orderIndex:
                              type: integer
                              description: Order index of the interview step within the flow
        '404':
          description: Position not found
        '500':
          description: Internal server error
  /positions:
    get:
      summary: Get all visible positions
      description: Retrieves all positions that are marked as visible.
      responses:
        '200':
          description: List of visible positions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique identifier for the position
                    companyId:
                      type: integer
                      description: ID of the company
                    interviewFlowId:
                      type: integer
                      description: ID of the interview flow
                    title:
                      type: string
                      description: Title of the position
                    description:
                      type: string
                      description: Description of the position
                    status:
                      type: string
                      description: Status of the position
                    isVisible:
                      type: boolean
                      description: Visibility status of the position
                    location:
                      type: string
                      description: Location of the position
                    jobDescription:
                      type: string
                      description: Job description
                    requirements:
                      type: string
                      description: Requirements for the position
                      nullable: true
                    responsibilities:
                      type: string
                      description: Responsibilities of the position
                      nullable: true
                    salaryMin:
                      type: number
                      description: Minimum salary
                      nullable: true
                    salaryMax:
                      type: number
                      description: Maximum salary
                      nullable: true
                    employmentType:
                      type: string
                      description: Type of employment
                      nullable: true
                    benefits:
                      type: string
                      description: Benefits offered
                      nullable: true
                    companyDescription:
                      type: string
                      description: Description of the company
                      nullable: true
                    applicationDeadline:
                      type: string
                      format: date-time
                      description: Application deadline
                      nullable: true
                    contactInfo:
                      type: string
                      description: Contact information
                      nullable: true
        '500':
          description: Internal server error
  /positions/{id}:
    put:
      tags:
        - positions
      summary: Update a position
      description: Updates an existing position with the provided data. All fields are optional for partial updates.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the position to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionUpdate'
      responses:
        '200':
          description: Position updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Position updated successfully"
                  data:
                    $ref: '#/components/schemas/Position'
        '400':
          description: Invalid input or validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
        '404':
          description: Position not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string

components:
  schemas:
    Position:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the position
        companyId:
          type: integer
          description: ID of the company
        interviewFlowId:
          type: integer
          description: ID of the interview flow
        title:
          type: string
          description: Title of the position
        description:
          type: string
          description: Description of the position
        status:
          type: string
          enum: [Open, Contratado, Cerrado, Borrador]
          description: Status of the position
        isVisible:
          type: boolean
          description: Visibility status of the position
        location:
          type: string
          description: Location of the position
        jobDescription:
          type: string
          description: Job description
        requirements:
          type: string
          description: Requirements for the position
          nullable: true
        responsibilities:
          type: string
          description: Responsibilities of the position
          nullable: true
        salaryMin:
          type: number
          description: Minimum salary
          nullable: true
        salaryMax:
          type: number
          description: Maximum salary
          nullable: true
        employmentType:
          type: string
          description: Type of employment
          nullable: true
        benefits:
          type: string
          description: Benefits offered
          nullable: true
        companyDescription:
          type: string
          description: Description of the company
          nullable: true
        applicationDeadline:
          type: string
          format: date-time
          description: Application deadline
          nullable: true
        contactInfo:
          type: string
          description: Contact information
          nullable: true

    PositionUpdate:
      type: object
      description: Schema for updating a position. All fields are optional for partial updates.
      properties:
        companyId:
          type: integer
          description: ID of the company
          minimum: 1
        interviewFlowId:
          type: integer
          description: ID of the interview flow
          minimum: 1
        title:
          type: string
          description: Title of the position
          maxLength: 100
          minLength: 1
        description:
          type: string
          description: Description of the position
          minLength: 1
        status:
          type: string
          enum: [Open, Contratado, Cerrado, Borrador]
          description: Status of the position
        isVisible:
          type: boolean
          description: Visibility status of the position
        location:
          type: string
          description: Location of the position
          minLength: 1
        jobDescription:
          type: string
          description: Job description
          minLength: 1
        requirements:
          type: string
          description: Requirements for the position
          nullable: true
        responsibilities:
          type: string
          description: Responsibilities of the position
          nullable: true
        salaryMin:
          type: number
          description: Minimum salary
          minimum: 0
          nullable: true
        salaryMax:
          type: number
          description: Maximum salary
          minimum: 0
          nullable: true
        employmentType:
          type: string
          description: Type of employment
          nullable: true
        benefits:
          type: string
          description: Benefits offered
          nullable: true
        companyDescription:
          type: string
          description: Description of the company
          nullable: true
        applicationDeadline:
          type: string
          format: date-time
          description: Application deadline (must be in the future)
          nullable: true
        contactInfo:
          type: string
          description: Contact information
          nullable: true
      additionalProperties: false
